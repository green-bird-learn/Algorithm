题目描述
Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists
Input: l1 = [1,2,4], l2 = [1,3,4]
Output: [1,1,2,3,4,4]
来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/merge-two-sorted-lists
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
递归解法：递归需要的是终止条件和调用自身的过程，
代码：
   class Solution(self, l1:LinkList, l2:LinkList) ->LinkList:
       def merge(self, l1, l2):
          if l1 is None: # 终止条件1，当最后判断l1连接完毕了，就开始回溯
              return l2
          if l2 is None: # 终止条件2，当最后判断l2连接完毕了，就开始回溯
              return l1
          if l1.value < l2.value: 
              l1.next = self.merge(l1.next, l2) # 递归，当l1第一个节点的值小于l2时，以l1为起点开始连接，回溯完后要返回l1
              return l1
          elif:
              l2.next = self.merge(l1, l2.next) # 递归，同理
              return l2
    
